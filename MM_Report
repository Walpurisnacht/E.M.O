//-----MAKEFILE-----//

- dlib DOESN'T BUILD lib => add /dlib/all/source.cpp in sources
- For faster speed => enable -msse2 -msse4.1 -msse4.2 (sse2 recommended due to hardware compatibility)
- Further detail in makefile

//-----DEMO-----//

[DONE] - Test image landmark processing
[DONE] - Research lib to extract frames from video: opencv with ffmpeg lib
	+ Include `pkg-config opencv --cflags --libs` when build
[DONE] - Convert image sequence to video
	* RAM management
	- g++ -g -std=c++11 -Wall -DDEBUG -DDLIB_JPEG_SUPPORT -msse2 -I /usr/include extract_frames.cc /usr/include/dlib/all/source.cpp -o test `pkg-config opencv --cflags --libs` -lpthread -lX11 -ljpeg

[DONE] - Upgrade image landmark processing from video

//-----COLLECT DATA APP-----//
- g++ -O3 -I /usr/include/ /usr/include/dlib/all/source.cpp -lpthread -lX11 -ljpeg landmark.cc -DDLIB_JPEG_SUPPORT
[DONE] - Crop landmark from dataset + list of landmark location

//-----IMG PROCESS-----//
[DONE] - Rotate img by balancing point 32 & 36
[DONE] - Encountered problem in calculating new point coordinate

//-----APP-----//
- Lib used: opencv (img processing), dlib (facial landmark), libsvm (prediction)
- Feature calculator C++
- Import libsvm model
- Test run (img -> vid -> cam)
[DONE] g++ -O3 -pg -g -std=c++11 -mavx -I /usr/include/ cam_overlay.cc feature_calculator.cc /usr/include/dlib/all/source.cpp /media/DATA/EMO/src/libsvm.a /usr/lib/libgtest.a /usr/lib/libgtest_main.a -o cam_overlay `pkg-config opencv --cflags --libs` -lpthread -lX11

//-----LIBSVM-----//
[DONE] - Include svm source code (solution: object file?) = static library
[SWITCH] - struct svm_node for building data for prediction

//-----GPROF-----//
- Compile with -pg
- Execute gprof [app] gmon.out > result.txt